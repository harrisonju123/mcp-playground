name: ci

on:
  push: { branches: [main] }
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Go vet / test for every module
        shell: bash
        run: |
          # Parse go.work → JSON → extract .Use[].DiskPath list
          GO_MODULES=$(go work edit -json | jq -r '.Use[].DiskPath')
          echo "Detected Go modules:"
          echo "$GO_MODULES" | sed 's/^/  • /'
          echo
          
          set -e  # fail fast on first error
          for m in $GO_MODULES; do
            echo "▶ go vet   $m/..."
            go vet   "$m"/...
            echo "▶ go test  $m/..."
            go test  "$m"/...
            echo
          done

      # Node
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'pnpm' }
      - run: |
          cd web
          corepack enable
          pnpm install --frozen-lockfile
          pnpm build

      # Docker build smoke check
      - run: docker build -f Dockerfile.daemon -t mcpxd:ci .